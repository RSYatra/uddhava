# Ruff configuration
# Ruff is a fast Python linter and formatter that replaces flake8, black, and isort

# Target Python version
target-version = "py313"

# Line length (matching your current setup)
line-length = 100

# Exclude directories
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "alembic",
    "logs",
    "uploads",
    "static",
]

[lint]
# Enable rule sets
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort (import sorting)
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]

# Ignore specific rules
ignore = [
    "E501",   # line too long (formatter handles this, but allow some flexibility for docs)
    "E203",   # whitespace before ':' (not needed in Ruff, it's auto-formatted)
    "B008",   # do not perform function call in argument defaults (common in FastAPI)
    "B904",   # raise from exception (not critical for API responses)
    "ARG002", # unused method argument (common in FastAPI dependencies)
    "ARG001", # unused function argument (common in callbacks)
    "SIM102", # nested if simplification (sometimes clearer as is)
    "SIM103", # ternary operator simplification (sometimes less readable)
    "SIM105", # contextlib.suppress (explicit try-except is clearer)
    "SIM108", # use ternary operator (sometimes less readable)
]

[lint.per-file-ignores]
# Ignore unused imports in __init__.py files
"__init__.py" = ["F401"]
# Ignore complexity checks in test files
"tests/*" = ["C901"]

[format]
# Use double quotes for strings (like black)
quote-style = "double"

# Indent with spaces (like black)
indent-style = "space"

# Respect magic trailing comma (like black)
skip-magic-trailing-comma = false

# Format docstrings (like black)
docstring-code-format = true
