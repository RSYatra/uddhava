name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    name: Security & Secrets Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run Trufflehog to scan for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

    - name: Scan for hardcoded credentials
      run: |
        if grep -r -i "password\s*=" --include="*.py" . | grep -v "DB_PASSWORD" | grep -v "credentials.py" | grep -v ".env"; then
          echo "Found hardcoded passwords!"
          exit 1
        fi

        if grep -r -i "secret.*=" --include="*.py" . | grep -v "SECRET_KEY" | grep -v ".env"; then
          echo "Found hardcoded secrets!"
          exit 1
        fi

        if grep -r -i "api.*key.*=" --include="*.py" . | grep -v ".env"; then
          echo "Found hardcoded API keys!"
          exit 1
        fi

        echo "No hardcoded credentials found"

  code-quality:
    name: Code Quality & Formatting
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Code formatting check with Ruff
      run: ruff format --check .

    - name: Linting with Ruff
      run: ruff check .

    - name: Type checking with mypy
      run: mypy . --ignore-missing-imports --no-strict-optional

    - name: Security analysis with bandit
      run: bandit -r . --skip B101

    - name: Check for vulnerabilities
      run: safety check

  tests:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USER: test_user
        DB_PASSWORD: test_password
        DB_NAME: test_db
        ENVIRONMENT: test
      run: pytest --cov=. --cov-report=xml -v

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies and audit
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip-audit -r requirements.txt
